<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk.Web">
	<PropertyGroup>
		<TargetFramework>netcoreapp3.1</TargetFramework>
		<TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
		<TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
		<IsPackable>false</IsPackable>
		<SpaRoot>ClientApp\</SpaRoot>
		<DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
		<GenerateAssemblyInfo>false</GenerateAssemblyInfo>
		<GenerateTargetFrameworkAttribute>false</GenerateTargetFrameworkAttribute>
		<!-- Set this to true if you enable server-side prerendering -->
		<BuildServerSideRenderer>false</BuildServerSideRenderer>
	</PropertyGroup>
	<ItemGroup>
		<PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="3.1.15" />
		<PackageReference Include="Dapper" Version="2.0.123" />
		<PackageReference Include="System.Data.SqlClient" Version="4.8.3" />
		<PackageReference Include="Microsoft.AspNetCore.Mvc.Core" Version="2.2.5" />
		<PackageReference Include="Microsoft.AspNet.WebApi.Cors" Version="5.2.7" />
		<PackageReference Include="Microsoft.AspNetCore.Mvc.NewtonsoftJson" Version="3.1.22" />
		<PackageReference Include="EntityFramework" Version="6.4.4" />
	</ItemGroup>
	<ItemGroup>
		<!-- Don't publish the SPA source files, but do show them in the project files list -->
		<Content Remove="$(SpaRoot)**" />
		<None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
		<None Remove="DAL\" />
		<None Remove="Entity\" />
		<None Remove="DAL\Repository\" />
		<None Remove="DAL\Service\" />
		<None Remove="DAL\Repository\Repository\" />
		<None Remove="DAL\Repository\Interface\" />
		<None Remove="DAL\Service\Interface\" />
		<None Remove="DAL\Service\Repository\" />
		<None Remove="Dapper" />
		<None Remove="System.Data.SqlClient" />
		<None Remove="Microsoft.AspNetCore.Mvc.Core" />
		<None Remove="Microsoft.AspNet.WebApi.Cors" />
		<None Remove="Newtonsoft.Json" />
		<None Remove="Microsoft.AspNetCore.Mvc.NewtonsoftJson" />
		<None Remove="ClientApp\src\app\Services\" />
		<None Remove="EntityFramework" />
		<None Remove="ClientApp\dist\main-es2015.js" />
		<None Remove="ClientApp\dist\runtime-es2015.js" />
		<None Remove="ClientApp\dist\vendor-es5.js" />
		<None Remove="ClientApp\dist\index.html" />
		<None Remove="ClientApp\dist\vendor-es2015.js" />
		<None Remove="ClientApp\dist\styles.css" />
		<None Remove="ClientApp\dist\runtime-es5.js" />
		<None Remove="ClientApp\dist\polyfills-es2015.js.map" />
		<None Remove="ClientApp\dist\main-es2015.js.map" />
		<None Remove="ClientApp\dist\polyfills-es2015.js" />
		<None Remove="ClientApp\dist\vendor-es2015.js.map" />
		<None Remove="ClientApp\dist\polyfills-es5.js.map" />
		<None Remove="ClientApp\dist\polyfills-es5.js" />
		<None Remove="ClientApp\dist\vendor-es5.js.map" />
		<None Remove="ClientApp\dist\runtime-es5.js.map" />
		<None Remove="ClientApp\dist\styles.css.map" />
		<None Remove="ClientApp\dist\main-es5.js" />
		<None Remove="ClientApp\dist\runtime-es2015.js.map" />
		<None Remove="ClientApp\dist\main-es5.js.map" />
	</ItemGroup>
	<ItemGroup>
		<Folder Include="DAL\" />
		<Folder Include="Entity\" />
		<Folder Include="DAL\Repo\" />
		<Folder Include="DAL\Service\" />
		<Folder Include="DAL\Service\Interface" />
		<Folder Include="DAL\Service\ServiceClasses" />
		<Folder Include="DAL\Repo\Repository\" />
		<Folder Include="DAL\Repo\Interface\" />
		<Folder Include="DAL\Service\Interface\" />
		<Folder Include="ClientApp\src\app\Services\" />
	</ItemGroup>
	<Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
		<!-- Ensure Node.js is installed -->
		<Exec Command="node --version" ContinueOnError="true">
			<Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
		</Exec>
		<Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
		<Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
	</Target>
	<Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
		<!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod" />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:ssr -- --prod" Condition=" '$(BuildServerSideRenderer)' == 'true' " />
		<!-- Include the newly-built files in the publish output -->
		<ItemGroup>
			<DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
			<DistFiles Include="$(SpaRoot)node_modules\**" Condition="'$(BuildServerSideRenderer)' == 'true'" />
			<ResolvedFileToPublish Include="@(DistFiles-&gt;'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
				<RelativePath>%(DistFiles.Identity)</RelativePath>
				<CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
				<ExcludeFromSingleFile>true</ExcludeFromSingleFile>
			</ResolvedFileToPublish>
		</ItemGroup>
	</Target>
</Project>